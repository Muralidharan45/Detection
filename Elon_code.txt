[
    {
        "id": "0e8ca933418e253a",
        "type": "tab",
        "label": "Flow 13",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "907779231aaf4cf0",
        "type": "mqtt in",
        "z": "0e8ca933418e253a",
        "name": "MQTT Input",
        "topic": "status",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3f5a0d1dfac8b6a2",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "5490fd01fb1ccfd5"
            ]
        ]
    },
    {
        "id": "5490fd01fb1ccfd5",
        "type": "json",
        "z": "0e8ca933418e253a",
        "name": "Parse JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "02411dac20db05b6",
                "c7b86efb66907085"
            ]
        ]
    },
    {
        "id": "c7b86efb66907085",
        "type": "debug",
        "z": "0e8ca933418e253a",
        "name": "Debug Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "02411dac20db05b6",
        "type": "function",
        "z": "0e8ca933418e253a",
        "name": "Store Data",
        "func": "let context = global.get('drowsy_data') || {};\nif (typeof msg.payload === 'object' && msg.payload !== null) {\n    context.driver_status = msg.payload.driver_status || 'unknown';\n    context.led_status = msg.payload.led_status || 'off';\n    context.timestamp = new Date().toISOString();\n    global.set('drowsy_data', context);\n    msg.payload = { success: true, message: \"Data Stored Successfully\", data: context };\n} else {\n    msg.payload = { error: true, message: \"Invalid JSON Format\" };\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 180,
        "wires": [
            [
                "c7b86efb66907085",
                "3167973aec32b01b",
                "d0da582378340af9",
                "39e4615007023246",
                "15d9210bac411f39"
            ]
        ]
    },
    {
        "id": "3167973aec32b01b",
        "type": "ui_text",
        "z": "0e8ca933418e253a",
        "group": "dashboard-group",
        "width": "",
        "height": "",
        "name": "Driver Status",
        "label": "Driver Status",
        "format": "",
        "layout": "",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "d0da582378340af9",
        "type": "ui_text",
        "z": "0e8ca933418e253a",
        "group": "dashboard-group",
        "width": "",
        "height": "",
        "name": "LED Status",
        "label": "LED Status",
        "format": "",
        "layout": "",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "39e4615007023246",
        "type": "ui_text",
        "z": "0e8ca933418e253a",
        "group": "dashboard-group",
        "width": "",
        "height": "",
        "name": "Timestamp",
        "label": "Timestamp",
        "format": "",
        "layout": "",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "448128865bca99f5",
        "type": "http in",
        "z": "0e8ca933418e253a",
        "name": "HTTP Dashboard Data",
        "url": "/dashboard/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 340,
        "wires": [
            [
                "15d9210bac411f39"
            ]
        ]
    },
    {
        "id": "15d9210bac411f39",
        "type": "function",
        "z": "0e8ca933418e253a",
        "name": "Retrieve Data",
        "func": "const context = global.get('drowsy_data') || {};\nlet httpResponse = null;\nlet webSocketResponse = null;\n\nif (!context.driver_status) {\n    msg.payload = { error: true, message: \"No Data Available\" };\n} else {\n    msg.payload = context;\n}\n\n// If this is an HTTP request, create a response\nif (msg.req && msg.res) {\n    httpResponse = { ...msg };  // Clone msg to avoid modifying the original\n    httpResponse.res = msg.res;  // Ensure res object is present for HTTP response\n}\n\n// Always send data to WebSocket\nwebSocketResponse = { ...msg };\n\n// Return outputs: [HTTP Response, WebSocket Output, Debug Output]\nreturn [httpResponse, webSocketResponse, msg];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "22d9767c8cdf8a83",
                "c9c572b041993e0a",
                "c7b86efb66907085"
            ]
        ]
    },
    {
        "id": "22d9767c8cdf8a83",
        "type": "http response",
        "z": "0e8ca933418e253a",
        "name": "Send Dashboard Data",
        "statusCode": "",
        "headers": {},
        "x": 640,
        "y": 340,
        "wires": []
    },
    {
        "id": "c9c572b041993e0a",
        "type": "websocket out",
        "z": "0e8ca933418e253a",
        "name": "WebSocket Dashboard",
        "server": "f56a7c9d909a3776",
        "client": "",
        "x": 640,
        "y": 400,
        "wires": []
    },
    {
        "id": "3f5a0d1dfac8b6a2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1:1880",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dashboard-group",
        "type": "ui_group",
        "name": "Driver Drowsiness",
        "tab": "a1b2c3d4.5e6f7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f56a7c9d909a3776",
        "type": "websocket-listener",
        "path": "/ws/dashboard",
        "wholemsg": "false"
    },
    {
        "id": "a1b2c3d4.5e6f7",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]