[
    {
        "id": "mqtt_input",
        "type": "mqtt in",
        "z": "flow_1",
        "name": "MQTT Input",
        "topic": "drowsiness/data",
        "qos": "2",
        "broker": "mqtt_broker",
        "x": 120,
        "y": 100,
        "wires": [["parse_json"]]
    },
    {
        "id": "parse_json",
        "type": "json",
        "z": "flow_1",
        "name": "Parse JSON",
        "property": "payload",
        "x": 300,
        "y": 100,
        "wires": [["store_data", "debug_output"]]
    },
    {
        "id": "debug_output",
        "type": "debug",
        "z": "flow_1",
        "name": "Debug Output",
        "active": true,
        "console": "true",
        "x": 500,
        "y": 60,
        "wires": []
    },
    {
        "id": "store_data",
        "type": "function",
        "z": "flow_1",
        "name": "Store Data",
        "func": "let context = global.get('drowsy_data') || {};\nif (typeof msg.payload === 'object' && msg.payload !== null) {\n    context.driver_status = msg.payload.driver_status || 'unknown';\n    context.led_status = msg.payload.led_status || 'off';\n    context.timestamp = new Date().toISOString();\n    global.set('drowsy_data', context);\n    msg.payload = { success: true, message: \"Data Stored Successfully\", data: context };\n} else {\n    msg.payload = { error: true, message: \"Invalid JSON Format\" };\n}\nreturn msg;",
        "x": 500,
        "y": 140,
        "wires": [["debug_output", "driver_status", "led_status", "timestamp", "retrieve_data"]]
    },
    {
        "id": "driver_status",
        "type": "ui_text",
        "z": "flow_1",
        "name": "Driver Status",
        "label": "Driver Status",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "led_status",
        "type": "ui_text",
        "z": "flow_1",
        "name": "LED Status",
        "label": "LED Status",
        "x": 700,
        "y": 140,
        "wires": []
    },
    {
        "id": "timestamp",
        "type": "ui_text",
        "z": "flow_1",
        "name": "Timestamp",
        "label": "Timestamp",
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "http_dashboard",
        "type": "http in",
        "z": "flow_1",
        "name": "HTTP Dashboard Data",
        "url": "/dashboard/data",
        "method": "GET",
        "x": 150,
        "y": 300,
        "wires": [["retrieve_data"]]
    },
    {
        "id": "retrieve_data",
        "type": "function",
        "z": "flow_1",
        "name": "Retrieve Data",
        "func": "const context = global.get('drowsy_data') || {};\nif (!context.driver_status) {\n    msg.payload = { error: true, message: \"No Data Available\" };\n} else {\n    msg.payload = context;\n}\nreturn msg;",
        "x": 350,
        "y": 300,
        "wires": [["send_dashboard", "websocket_dashboard", "debug_output"]]
    },
    {
        "id": "send_dashboard",
        "type": "http response",
        "z": "flow_1",
        "name": "Send Dashboard Data",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "websocket_dashboard",
        "type": "websocket out",
        "z": "flow_1",
        "name": "WebSocket Dashboard",
        "server": "ws_dashboard",
        "x": 550,
        "y": 360,
        "wires": []
    }
]
